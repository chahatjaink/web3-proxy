name: Publish multiarch images on ghcr.io
on:
  push:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: alfred-hq/alfred-web3-proxy

jobs:
  publish:
    name: Build and push multiarch images
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      packages: 'write'
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.7

    - name: Install flake8 and docker-compose
      run: python -m pip install flake8 docker-compose==1.17.1

    - uses: benjlevesque/short-sha@v2.2
      id: short-sha
      with:
        length: 6

    - name: Derive latest image name
      id: branch-name
      run: |
        name=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')  
        echo "BRANCH_NAME=$name" >> $GITHUB_OUTPUT
    
    - name: Derive image name
      id: image
      run: |
        IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.short-sha.outputs.sha }}"
        echo "NAME=$IMAGE" >> $GITHUB_OUTPUT
    - name: Derive latest image name
      id: latest-image
      run: |
        IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{steps.branch-name.outputs.BRANCH_NAME}}-latest"
        echo "LATEST_NAME=$IMAGE" >> $GITHUB_OUTPUT
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and export
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: ${{ steps.image.outputs.NAME }},${{ steps.latest-image.outputs.LATEST_NAME }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        file: Dockerfile

    - name: Build arm64 additionaly and push multiarch image
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: ${{ steps.image.outputs.NAME }},${{ steps.latest-image.outputs.LATEST_NAME }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64
        file: Dockerfile

